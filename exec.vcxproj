<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="16.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{CC206DB0-BDC1-3788-BD64-00A41E0285C2}</ProjectGuid>
    <WindowsTargetPlatformVersion>10.0.18362.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>exec</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\Moritz\Desktop\MLang\bin\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">exec.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">exec</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\Moritz\Desktop\MLang\bin\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">exec.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">exec</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\Moritz\Desktop\MLang\bin\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">exec.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">exec</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\Moritz\Desktop\MLang\bin\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">exec.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">exec</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</GenerateManifest>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\Users\Moritz\Desktop\MLang\antlr4_runtime\src\antlr4_runtime\runtime\Cpp\runtime\src;C:\Users\Moritz\Desktop\MLang\gen;D:\Software\llvm\llvm\utils\unittest\googletest\include;D:\Software\llvm\llvm\include;D:\Software\llvm\llvm\bin\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Async</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <UseFullPaths>false</UseFullPaths>
      <PreprocessorDefinitions>_GNU_SOURCE;__STDC_CONSTANT_MACROS;__STDC_FORMAT_MACROS;__STDC_LIMIT_MACROS;ANTLR4CPP_STATIC;CMAKE_INTDIR="Debug";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_DEBUG;_GNU_SOURCE;__STDC_CONSTANT_MACROS;__STDC_FORMAT_MACROS;__STDC_LIMIT_MACROS;ANTLR4CPP_STATIC;CMAKE_INTDIR=\"Debug\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Users\Moritz\Desktop\MLang\antlr4_runtime\src\antlr4_runtime\runtime\Cpp\runtime\src;C:\Users\Moritz\Desktop\MLang\gen;D:\Software\llvm\llvm\utils\unittest\googletest\include;D:\Software\llvm\llvm\include;D:\Software\llvm\llvm\bin\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\Moritz\Desktop\MLang\antlr4_runtime\src\antlr4_runtime\runtime\Cpp\runtime\src;C:\Users\Moritz\Desktop\MLang\gen;D:\Software\llvm\llvm\utils\unittest\googletest\include;D:\Software\llvm\llvm\include;D:\Software\llvm\llvm\bin\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>antlr4_runtime\src\antlr4_runtime\runtime\Cpp\dist\$(Configuration)\antlr4-runtime-static.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>D:/Software/llvm/llvm/bin/Release/lib;D:/Software/llvm/llvm/bin/Release/lib/$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>C:/Users/Moritz/Desktop/MLang/Debug/exec.lib</ImportLibrary>
      <ProgramDataBaseFile>C:/Users/Moritz/Desktop/MLang/bin/Debug/exec.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\Users\Moritz\Desktop\MLang\antlr4_runtime\src\antlr4_runtime\runtime\Cpp\runtime\src;C:\Users\Moritz\Desktop\MLang\gen;D:\Software\llvm\llvm\utils\unittest\googletest\include;D:\Software\llvm\llvm\include;D:\Software\llvm\llvm\bin\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <ExceptionHandling>Async</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <UseFullPaths>false</UseFullPaths>
      <PreprocessorDefinitions>_GNU_SOURCE;__STDC_CONSTANT_MACROS;__STDC_FORMAT_MACROS;__STDC_LIMIT_MACROS;NDEBUG;ANTLR4CPP_STATIC;CMAKE_INTDIR="Release";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_GNU_SOURCE;__STDC_CONSTANT_MACROS;__STDC_FORMAT_MACROS;__STDC_LIMIT_MACROS;NDEBUG;ANTLR4CPP_STATIC;CMAKE_INTDIR=\"Release\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Users\Moritz\Desktop\MLang\antlr4_runtime\src\antlr4_runtime\runtime\Cpp\runtime\src;C:\Users\Moritz\Desktop\MLang\gen;D:\Software\llvm\llvm\utils\unittest\googletest\include;D:\Software\llvm\llvm\include;D:\Software\llvm\llvm\bin\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\Moritz\Desktop\MLang\antlr4_runtime\src\antlr4_runtime\runtime\Cpp\runtime\src;C:\Users\Moritz\Desktop\MLang\gen;D:\Software\llvm\llvm\utils\unittest\googletest\include;D:\Software\llvm\llvm\include;D:\Software\llvm\llvm\bin\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>antlr4_runtime\src\antlr4_runtime\runtime\Cpp\dist\$(Configuration)\antlr4-runtime-static.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>D:/Software/llvm/llvm/bin/Release/lib;D:/Software/llvm/llvm/bin/Release/lib/$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>C:/Users/Moritz/Desktop/MLang/Release/exec.lib</ImportLibrary>
      <ProgramDataBaseFile>C:/Users/Moritz/Desktop/MLang/bin/Release/exec.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\Users\Moritz\Desktop\MLang\antlr4_runtime\src\antlr4_runtime\runtime\Cpp\runtime\src;C:\Users\Moritz\Desktop\MLang\gen;D:\Software\llvm\llvm\utils\unittest\googletest\include;D:\Software\llvm\llvm\include;D:\Software\llvm\llvm\bin\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <ExceptionHandling>Async</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <UseFullPaths>false</UseFullPaths>
      <PreprocessorDefinitions>_GNU_SOURCE;__STDC_CONSTANT_MACROS;__STDC_FORMAT_MACROS;__STDC_LIMIT_MACROS;NDEBUG;ANTLR4CPP_STATIC;CMAKE_INTDIR="MinSizeRel";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_GNU_SOURCE;__STDC_CONSTANT_MACROS;__STDC_FORMAT_MACROS;__STDC_LIMIT_MACROS;NDEBUG;ANTLR4CPP_STATIC;CMAKE_INTDIR=\"MinSizeRel\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Users\Moritz\Desktop\MLang\antlr4_runtime\src\antlr4_runtime\runtime\Cpp\runtime\src;C:\Users\Moritz\Desktop\MLang\gen;D:\Software\llvm\llvm\utils\unittest\googletest\include;D:\Software\llvm\llvm\include;D:\Software\llvm\llvm\bin\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\Moritz\Desktop\MLang\antlr4_runtime\src\antlr4_runtime\runtime\Cpp\runtime\src;C:\Users\Moritz\Desktop\MLang\gen;D:\Software\llvm\llvm\utils\unittest\googletest\include;D:\Software\llvm\llvm\include;D:\Software\llvm\llvm\bin\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>antlr4_runtime\src\antlr4_runtime\runtime\Cpp\dist\$(Configuration)\antlr4-runtime-static.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>D:/Software/llvm/llvm/bin/Release/lib;D:/Software/llvm/llvm/bin/Release/lib/$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>C:/Users/Moritz/Desktop/MLang/MinSizeRel/exec.lib</ImportLibrary>
      <ProgramDataBaseFile>C:/Users/Moritz/Desktop/MLang/bin/MinSizeRel/exec.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\Users\Moritz\Desktop\MLang\antlr4_runtime\src\antlr4_runtime\runtime\Cpp\runtime\src;C:\Users\Moritz\Desktop\MLang\gen;D:\Software\llvm\llvm\utils\unittest\googletest\include;D:\Software\llvm\llvm\include;D:\Software\llvm\llvm\bin\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Async</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <UseFullPaths>false</UseFullPaths>
      <PreprocessorDefinitions>_GNU_SOURCE;__STDC_CONSTANT_MACROS;__STDC_FORMAT_MACROS;__STDC_LIMIT_MACROS;NDEBUG;ANTLR4CPP_STATIC;CMAKE_INTDIR="RelWithDebInfo";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_GNU_SOURCE;__STDC_CONSTANT_MACROS;__STDC_FORMAT_MACROS;__STDC_LIMIT_MACROS;NDEBUG;ANTLR4CPP_STATIC;CMAKE_INTDIR=\"RelWithDebInfo\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Users\Moritz\Desktop\MLang\antlr4_runtime\src\antlr4_runtime\runtime\Cpp\runtime\src;C:\Users\Moritz\Desktop\MLang\gen;D:\Software\llvm\llvm\utils\unittest\googletest\include;D:\Software\llvm\llvm\include;D:\Software\llvm\llvm\bin\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\Moritz\Desktop\MLang\antlr4_runtime\src\antlr4_runtime\runtime\Cpp\runtime\src;C:\Users\Moritz\Desktop\MLang\gen;D:\Software\llvm\llvm\utils\unittest\googletest\include;D:\Software\llvm\llvm\include;D:\Software\llvm\llvm\bin\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>antlr4_runtime\src\antlr4_runtime\runtime\Cpp\dist\$(Configuration)\antlr4-runtime-static.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>D:/Software/llvm/llvm/bin/Release/lib;D:/Software/llvm/llvm/bin/Release/lib/$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>C:/Users/Moritz/Desktop/MLang/RelWithDebInfo/exec.lib</ImportLibrary>
      <ProgramDataBaseFile>C:/Users/Moritz/Desktop/MLang/bin/RelWithDebInfo/exec.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\Moritz\Desktop\MLang\CMakeFiles\6197fda8616e7762c265c014c168eab2\MGrammarLexer.interp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building MGrammar with ANTLR 4.8</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd C:\Users\Moritz\Desktop\MLang
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
java -jar D:/Software/java-libs/antlr-4.8-complete.jar MGrammar.g4 -o C:/Users/Moritz/Desktop/MLang/gen -no-listener -Dlanguage=Cpp -listener -visitor -package MGrammar
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\Moritz\Desktop\MLang\MGrammar.g4;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\Moritz\Desktop\MLang\gen\MGrammarLexer.interp;C:\Users\Moritz\Desktop\MLang\gen\MGrammarLexer.tokens;C:\Users\Moritz\Desktop\MLang\gen\MGrammarLexer.h;C:\Users\Moritz\Desktop\MLang\gen\MGrammarLexer.cpp;C:\Users\Moritz\Desktop\MLang\gen\MGrammarParser.h;C:\Users\Moritz\Desktop\MLang\gen\MGrammarParser.cpp;C:\Users\Moritz\Desktop\MLang\gen\MGrammarBaseListener.h;C:\Users\Moritz\Desktop\MLang\gen\MGrammarBaseListener.cpp;C:\Users\Moritz\Desktop\MLang\gen\MGrammarListener.h;C:\Users\Moritz\Desktop\MLang\gen\MGrammarListener.cpp;C:\Users\Moritz\Desktop\MLang\gen\MGrammarBaseVisitor.h;C:\Users\Moritz\Desktop\MLang\gen\MGrammarBaseVisitor.cpp;C:\Users\Moritz\Desktop\MLang\gen\MGrammarVisitor.h;C:\Users\Moritz\Desktop\MLang\gen\MGrammarVisitor.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building MGrammar with ANTLR 4.8</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd C:\Users\Moritz\Desktop\MLang
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
java -jar D:/Software/java-libs/antlr-4.8-complete.jar MGrammar.g4 -o C:/Users/Moritz/Desktop/MLang/gen -no-listener -Dlanguage=Cpp -listener -visitor -package MGrammar
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\Moritz\Desktop\MLang\MGrammar.g4;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\Moritz\Desktop\MLang\gen\MGrammarLexer.interp;C:\Users\Moritz\Desktop\MLang\gen\MGrammarLexer.tokens;C:\Users\Moritz\Desktop\MLang\gen\MGrammarLexer.h;C:\Users\Moritz\Desktop\MLang\gen\MGrammarLexer.cpp;C:\Users\Moritz\Desktop\MLang\gen\MGrammarParser.h;C:\Users\Moritz\Desktop\MLang\gen\MGrammarParser.cpp;C:\Users\Moritz\Desktop\MLang\gen\MGrammarBaseListener.h;C:\Users\Moritz\Desktop\MLang\gen\MGrammarBaseListener.cpp;C:\Users\Moritz\Desktop\MLang\gen\MGrammarListener.h;C:\Users\Moritz\Desktop\MLang\gen\MGrammarListener.cpp;C:\Users\Moritz\Desktop\MLang\gen\MGrammarBaseVisitor.h;C:\Users\Moritz\Desktop\MLang\gen\MGrammarBaseVisitor.cpp;C:\Users\Moritz\Desktop\MLang\gen\MGrammarVisitor.h;C:\Users\Moritz\Desktop\MLang\gen\MGrammarVisitor.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building MGrammar with ANTLR 4.8</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd C:\Users\Moritz\Desktop\MLang
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
java -jar D:/Software/java-libs/antlr-4.8-complete.jar MGrammar.g4 -o C:/Users/Moritz/Desktop/MLang/gen -no-listener -Dlanguage=Cpp -listener -visitor -package MGrammar
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\Moritz\Desktop\MLang\MGrammar.g4;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\Moritz\Desktop\MLang\gen\MGrammarLexer.interp;C:\Users\Moritz\Desktop\MLang\gen\MGrammarLexer.tokens;C:\Users\Moritz\Desktop\MLang\gen\MGrammarLexer.h;C:\Users\Moritz\Desktop\MLang\gen\MGrammarLexer.cpp;C:\Users\Moritz\Desktop\MLang\gen\MGrammarParser.h;C:\Users\Moritz\Desktop\MLang\gen\MGrammarParser.cpp;C:\Users\Moritz\Desktop\MLang\gen\MGrammarBaseListener.h;C:\Users\Moritz\Desktop\MLang\gen\MGrammarBaseListener.cpp;C:\Users\Moritz\Desktop\MLang\gen\MGrammarListener.h;C:\Users\Moritz\Desktop\MLang\gen\MGrammarListener.cpp;C:\Users\Moritz\Desktop\MLang\gen\MGrammarBaseVisitor.h;C:\Users\Moritz\Desktop\MLang\gen\MGrammarBaseVisitor.cpp;C:\Users\Moritz\Desktop\MLang\gen\MGrammarVisitor.h;C:\Users\Moritz\Desktop\MLang\gen\MGrammarVisitor.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building MGrammar with ANTLR 4.8</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd C:\Users\Moritz\Desktop\MLang
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
java -jar D:/Software/java-libs/antlr-4.8-complete.jar MGrammar.g4 -o C:/Users/Moritz/Desktop/MLang/gen -no-listener -Dlanguage=Cpp -listener -visitor -package MGrammar
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\Moritz\Desktop\MLang\MGrammar.g4;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\Moritz\Desktop\MLang\gen\MGrammarLexer.interp;C:\Users\Moritz\Desktop\MLang\gen\MGrammarLexer.tokens;C:\Users\Moritz\Desktop\MLang\gen\MGrammarLexer.h;C:\Users\Moritz\Desktop\MLang\gen\MGrammarLexer.cpp;C:\Users\Moritz\Desktop\MLang\gen\MGrammarParser.h;C:\Users\Moritz\Desktop\MLang\gen\MGrammarParser.cpp;C:\Users\Moritz\Desktop\MLang\gen\MGrammarBaseListener.h;C:\Users\Moritz\Desktop\MLang\gen\MGrammarBaseListener.cpp;C:\Users\Moritz\Desktop\MLang\gen\MGrammarListener.h;C:\Users\Moritz\Desktop\MLang\gen\MGrammarListener.cpp;C:\Users\Moritz\Desktop\MLang\gen\MGrammarBaseVisitor.h;C:\Users\Moritz\Desktop\MLang\gen\MGrammarBaseVisitor.cpp;C:\Users\Moritz\Desktop\MLang\gen\MGrammarVisitor.h;C:\Users\Moritz\Desktop\MLang\gen\MGrammarVisitor.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\Moritz\Desktop\MLang\CMakeLists.txt">
      <StdOutEncoding>UTF-8</StdOutEncoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule C:/Users/Moritz/Desktop/MLang/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
D:\Software\CMake\bin\cmake.exe -SC:/Users/Moritz/Desktop/MLang -BC:/Users/Moritz/Desktop/MLang --check-stamp-file C:/Users/Moritz/Desktop/MLang/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\Moritz\Desktop\MLang\CMakeFiles\3.18.1\CMakeCCompiler.cmake;C:\Users\Moritz\Desktop\MLang\CMakeFiles\3.18.1\CMakeCXXCompiler.cmake;C:\Users\Moritz\Desktop\MLang\CMakeFiles\3.18.1\CMakeRCCompiler.cmake;C:\Users\Moritz\Desktop\MLang\CMakeFiles\3.18.1\CMakeSystem.cmake;C:\Users\Moritz\Desktop\MLang\antlr4_runtime\tmp\antlr4_runtime-cfgcmd.txt.in;C:\Users\Moritz\Desktop\MLang\cmake\ExternalAntlr4Cpp.cmake;C:\Users\Moritz\Desktop\MLang\cmake\FindANTLR.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeCInformation.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeCXXInformation.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeCommonLanguageInclude.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeFindJavaCommon.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeGenericSystem.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeInitializeConfigs.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeLanguageInformation.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeRCInformation.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeSystemSpecificInformation.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeSystemSpecificInitialize.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CheckCSourceCompiles.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CheckIncludeFile.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CheckLibraryExists.cmake;D:\Software\CMake\share\cmake-3.18\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\Software\CMake\share\cmake-3.18\Modules\Compiler\MSVC-C.cmake;D:\Software\CMake\share\cmake-3.18\Modules\Compiler\MSVC-CXX.cmake;D:\Software\CMake\share\cmake-3.18\Modules\ExternalProject-gitupdate.cmake.in;D:\Software\CMake\share\cmake-3.18\Modules\ExternalProject.cmake;D:\Software\CMake\share\cmake-3.18\Modules\FindGTest.cmake;D:\Software\CMake\share\cmake-3.18\Modules\FindGit.cmake;D:\Software\CMake\share\cmake-3.18\Modules\FindJava.cmake;D:\Software\CMake\share\cmake-3.18\Modules\FindPackageHandleStandardArgs.cmake;D:\Software\CMake\share\cmake-3.18\Modules\FindPackageMessage.cmake;D:\Software\CMake\share\cmake-3.18\Modules\FindThreads.cmake;D:\Software\CMake\share\cmake-3.18\Modules\GoogleTest.cmake;D:\Software\CMake\share\cmake-3.18\Modules\Platform\Windows-MSVC-C.cmake;D:\Software\CMake\share\cmake-3.18\Modules\Platform\Windows-MSVC-CXX.cmake;D:\Software\CMake\share\cmake-3.18\Modules\Platform\Windows-MSVC.cmake;D:\Software\CMake\share\cmake-3.18\Modules\Platform\Windows.cmake;D:\Software\CMake\share\cmake-3.18\Modules\Platform\WindowsPaths.cmake;D:\Software\CMake\share\cmake-3.18\Modules\RepositoryInfo.txt.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\Moritz\Desktop\MLang\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule C:/Users/Moritz/Desktop/MLang/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
D:\Software\CMake\bin\cmake.exe -SC:/Users/Moritz/Desktop/MLang -BC:/Users/Moritz/Desktop/MLang --check-stamp-file C:/Users/Moritz/Desktop/MLang/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\Moritz\Desktop\MLang\CMakeFiles\3.18.1\CMakeCCompiler.cmake;C:\Users\Moritz\Desktop\MLang\CMakeFiles\3.18.1\CMakeCXXCompiler.cmake;C:\Users\Moritz\Desktop\MLang\CMakeFiles\3.18.1\CMakeRCCompiler.cmake;C:\Users\Moritz\Desktop\MLang\CMakeFiles\3.18.1\CMakeSystem.cmake;C:\Users\Moritz\Desktop\MLang\antlr4_runtime\tmp\antlr4_runtime-cfgcmd.txt.in;C:\Users\Moritz\Desktop\MLang\cmake\ExternalAntlr4Cpp.cmake;C:\Users\Moritz\Desktop\MLang\cmake\FindANTLR.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeCInformation.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeCXXInformation.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeCommonLanguageInclude.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeFindJavaCommon.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeGenericSystem.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeInitializeConfigs.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeLanguageInformation.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeRCInformation.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeSystemSpecificInformation.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeSystemSpecificInitialize.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CheckCSourceCompiles.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CheckIncludeFile.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CheckLibraryExists.cmake;D:\Software\CMake\share\cmake-3.18\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\Software\CMake\share\cmake-3.18\Modules\Compiler\MSVC-C.cmake;D:\Software\CMake\share\cmake-3.18\Modules\Compiler\MSVC-CXX.cmake;D:\Software\CMake\share\cmake-3.18\Modules\ExternalProject-gitupdate.cmake.in;D:\Software\CMake\share\cmake-3.18\Modules\ExternalProject.cmake;D:\Software\CMake\share\cmake-3.18\Modules\FindGTest.cmake;D:\Software\CMake\share\cmake-3.18\Modules\FindGit.cmake;D:\Software\CMake\share\cmake-3.18\Modules\FindJava.cmake;D:\Software\CMake\share\cmake-3.18\Modules\FindPackageHandleStandardArgs.cmake;D:\Software\CMake\share\cmake-3.18\Modules\FindPackageMessage.cmake;D:\Software\CMake\share\cmake-3.18\Modules\FindThreads.cmake;D:\Software\CMake\share\cmake-3.18\Modules\GoogleTest.cmake;D:\Software\CMake\share\cmake-3.18\Modules\Platform\Windows-MSVC-C.cmake;D:\Software\CMake\share\cmake-3.18\Modules\Platform\Windows-MSVC-CXX.cmake;D:\Software\CMake\share\cmake-3.18\Modules\Platform\Windows-MSVC.cmake;D:\Software\CMake\share\cmake-3.18\Modules\Platform\Windows.cmake;D:\Software\CMake\share\cmake-3.18\Modules\Platform\WindowsPaths.cmake;D:\Software\CMake\share\cmake-3.18\Modules\RepositoryInfo.txt.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\Moritz\Desktop\MLang\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule C:/Users/Moritz/Desktop/MLang/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
D:\Software\CMake\bin\cmake.exe -SC:/Users/Moritz/Desktop/MLang -BC:/Users/Moritz/Desktop/MLang --check-stamp-file C:/Users/Moritz/Desktop/MLang/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\Moritz\Desktop\MLang\CMakeFiles\3.18.1\CMakeCCompiler.cmake;C:\Users\Moritz\Desktop\MLang\CMakeFiles\3.18.1\CMakeCXXCompiler.cmake;C:\Users\Moritz\Desktop\MLang\CMakeFiles\3.18.1\CMakeRCCompiler.cmake;C:\Users\Moritz\Desktop\MLang\CMakeFiles\3.18.1\CMakeSystem.cmake;C:\Users\Moritz\Desktop\MLang\antlr4_runtime\tmp\antlr4_runtime-cfgcmd.txt.in;C:\Users\Moritz\Desktop\MLang\cmake\ExternalAntlr4Cpp.cmake;C:\Users\Moritz\Desktop\MLang\cmake\FindANTLR.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeCInformation.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeCXXInformation.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeCommonLanguageInclude.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeFindJavaCommon.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeGenericSystem.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeInitializeConfigs.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeLanguageInformation.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeRCInformation.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeSystemSpecificInformation.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeSystemSpecificInitialize.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CheckCSourceCompiles.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CheckIncludeFile.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CheckLibraryExists.cmake;D:\Software\CMake\share\cmake-3.18\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\Software\CMake\share\cmake-3.18\Modules\Compiler\MSVC-C.cmake;D:\Software\CMake\share\cmake-3.18\Modules\Compiler\MSVC-CXX.cmake;D:\Software\CMake\share\cmake-3.18\Modules\ExternalProject-gitupdate.cmake.in;D:\Software\CMake\share\cmake-3.18\Modules\ExternalProject.cmake;D:\Software\CMake\share\cmake-3.18\Modules\FindGTest.cmake;D:\Software\CMake\share\cmake-3.18\Modules\FindGit.cmake;D:\Software\CMake\share\cmake-3.18\Modules\FindJava.cmake;D:\Software\CMake\share\cmake-3.18\Modules\FindPackageHandleStandardArgs.cmake;D:\Software\CMake\share\cmake-3.18\Modules\FindPackageMessage.cmake;D:\Software\CMake\share\cmake-3.18\Modules\FindThreads.cmake;D:\Software\CMake\share\cmake-3.18\Modules\GoogleTest.cmake;D:\Software\CMake\share\cmake-3.18\Modules\Platform\Windows-MSVC-C.cmake;D:\Software\CMake\share\cmake-3.18\Modules\Platform\Windows-MSVC-CXX.cmake;D:\Software\CMake\share\cmake-3.18\Modules\Platform\Windows-MSVC.cmake;D:\Software\CMake\share\cmake-3.18\Modules\Platform\Windows.cmake;D:\Software\CMake\share\cmake-3.18\Modules\Platform\WindowsPaths.cmake;D:\Software\CMake\share\cmake-3.18\Modules\RepositoryInfo.txt.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\Moritz\Desktop\MLang\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule C:/Users/Moritz/Desktop/MLang/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
D:\Software\CMake\bin\cmake.exe -SC:/Users/Moritz/Desktop/MLang -BC:/Users/Moritz/Desktop/MLang --check-stamp-file C:/Users/Moritz/Desktop/MLang/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\Moritz\Desktop\MLang\CMakeFiles\3.18.1\CMakeCCompiler.cmake;C:\Users\Moritz\Desktop\MLang\CMakeFiles\3.18.1\CMakeCXXCompiler.cmake;C:\Users\Moritz\Desktop\MLang\CMakeFiles\3.18.1\CMakeRCCompiler.cmake;C:\Users\Moritz\Desktop\MLang\CMakeFiles\3.18.1\CMakeSystem.cmake;C:\Users\Moritz\Desktop\MLang\antlr4_runtime\tmp\antlr4_runtime-cfgcmd.txt.in;C:\Users\Moritz\Desktop\MLang\cmake\ExternalAntlr4Cpp.cmake;C:\Users\Moritz\Desktop\MLang\cmake\FindANTLR.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeCInformation.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeCXXInformation.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeCommonLanguageInclude.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeFindJavaCommon.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeGenericSystem.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeInitializeConfigs.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeLanguageInformation.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeRCInformation.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeSystemSpecificInformation.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CMakeSystemSpecificInitialize.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CheckCSourceCompiles.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CheckIncludeFile.cmake;D:\Software\CMake\share\cmake-3.18\Modules\CheckLibraryExists.cmake;D:\Software\CMake\share\cmake-3.18\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\Software\CMake\share\cmake-3.18\Modules\Compiler\MSVC-C.cmake;D:\Software\CMake\share\cmake-3.18\Modules\Compiler\MSVC-CXX.cmake;D:\Software\CMake\share\cmake-3.18\Modules\ExternalProject-gitupdate.cmake.in;D:\Software\CMake\share\cmake-3.18\Modules\ExternalProject.cmake;D:\Software\CMake\share\cmake-3.18\Modules\FindGTest.cmake;D:\Software\CMake\share\cmake-3.18\Modules\FindGit.cmake;D:\Software\CMake\share\cmake-3.18\Modules\FindJava.cmake;D:\Software\CMake\share\cmake-3.18\Modules\FindPackageHandleStandardArgs.cmake;D:\Software\CMake\share\cmake-3.18\Modules\FindPackageMessage.cmake;D:\Software\CMake\share\cmake-3.18\Modules\FindThreads.cmake;D:\Software\CMake\share\cmake-3.18\Modules\GoogleTest.cmake;D:\Software\CMake\share\cmake-3.18\Modules\Platform\Windows-MSVC-C.cmake;D:\Software\CMake\share\cmake-3.18\Modules\Platform\Windows-MSVC-CXX.cmake;D:\Software\CMake\share\cmake-3.18\Modules\Platform\Windows-MSVC.cmake;D:\Software\CMake\share\cmake-3.18\Modules\Platform\Windows.cmake;D:\Software\CMake\share\cmake-3.18\Modules\Platform\WindowsPaths.cmake;D:\Software\CMake\share\cmake-3.18\Modules\RepositoryInfo.txt.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\Moritz\Desktop\MLang\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="C:\Users\Moritz\Desktop\MLang\src\main.cpp" />
    <ClInclude Include="C:\Users\Moritz\Desktop\MLang\gen\MGrammarLexer.h" />
    <ClCompile Include="C:\Users\Moritz\Desktop\MLang\gen\MGrammarLexer.cpp" />
    <ClInclude Include="C:\Users\Moritz\Desktop\MLang\gen\MGrammarParser.h" />
    <ClCompile Include="C:\Users\Moritz\Desktop\MLang\gen\MGrammarParser.cpp" />
    <ClInclude Include="C:\Users\Moritz\Desktop\MLang\gen\MGrammarBaseListener.h" />
    <ClCompile Include="C:\Users\Moritz\Desktop\MLang\gen\MGrammarBaseListener.cpp" />
    <ClInclude Include="C:\Users\Moritz\Desktop\MLang\gen\MGrammarListener.h" />
    <ClCompile Include="C:\Users\Moritz\Desktop\MLang\gen\MGrammarListener.cpp" />
    <ClInclude Include="C:\Users\Moritz\Desktop\MLang\gen\MGrammarBaseVisitor.h" />
    <ClCompile Include="C:\Users\Moritz\Desktop\MLang\gen\MGrammarBaseVisitor.cpp" />
    <ClInclude Include="C:\Users\Moritz\Desktop\MLang\gen\MGrammarVisitor.h" />
    <ClCompile Include="C:\Users\Moritz\Desktop\MLang\gen\MGrammarVisitor.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="C:\Users\Moritz\Desktop\MLang\ZERO_CHECK.vcxproj">
      <Project>{0E489487-8B8B-333E-B587-6AD1096F478E}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="C:\Users\Moritz\Desktop\MLang\antlr4_runtime-build_static.vcxproj">
      <Project>{CEC71BC9-660D-3A29-9014-325C91A8B669}</Project>
      <Name>antlr4_runtime-build_static</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>